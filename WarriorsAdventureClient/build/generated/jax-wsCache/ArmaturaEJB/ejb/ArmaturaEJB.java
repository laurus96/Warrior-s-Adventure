
package ejb;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ArmaturaEJB", targetNamespace = "http://EJB/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ArmaturaEJB {


    /**
     * 
     * @param arg0
     * @return
     *     returns ejb.Armatura
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateArmor", targetNamespace = "http://EJB/", className = "ejb.UpdateArmor")
    @ResponseWrapper(localName = "updateArmorResponse", targetNamespace = "http://EJB/", className = "ejb.UpdateArmorResponse")
    @Action(input = "http://EJB/ArmaturaEJB/updateArmorRequest", output = "http://EJB/ArmaturaEJB/updateArmorResponse")
    public Armatura updateArmor(
        @WebParam(name = "arg0", targetNamespace = "")
        Armatura arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ejb.Armatura
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertArmor", targetNamespace = "http://EJB/", className = "ejb.InsertArmor")
    @ResponseWrapper(localName = "insertArmorResponse", targetNamespace = "http://EJB/", className = "ejb.InsertArmorResponse")
    @Action(input = "http://EJB/ArmaturaEJB/insertArmorRequest", output = "http://EJB/ArmaturaEJB/insertArmorResponse")
    public Armatura insertArmor(
        @WebParam(name = "arg0", targetNamespace = "")
        Armatura arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteArmor", targetNamespace = "http://EJB/", className = "ejb.DeleteArmor")
    @ResponseWrapper(localName = "deleteArmorResponse", targetNamespace = "http://EJB/", className = "ejb.DeleteArmorResponse")
    @Action(input = "http://EJB/ArmaturaEJB/deleteArmorRequest", output = "http://EJB/ArmaturaEJB/deleteArmorResponse")
    public void deleteArmor(
        @WebParam(name = "arg0", targetNamespace = "")
        Armatura arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ejb.Armatura>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findArmor", targetNamespace = "http://EJB/", className = "ejb.FindArmor")
    @ResponseWrapper(localName = "findArmorResponse", targetNamespace = "http://EJB/", className = "ejb.FindArmorResponse")
    @Action(input = "http://EJB/ArmaturaEJB/findArmorRequest", output = "http://EJB/ArmaturaEJB/findArmorResponse")
    public List<Armatura> findArmor(
        @WebParam(name = "arg0", targetNamespace = "")
        Personaggio arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ejb.Armatura
     */
    @WebMethod(operationName = "findArmor_byid")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findArmor_byid", targetNamespace = "http://EJB/", className = "ejb.FindArmorByid")
    @ResponseWrapper(localName = "findArmor_byidResponse", targetNamespace = "http://EJB/", className = "ejb.FindArmorByidResponse")
    @Action(input = "http://EJB/ArmaturaEJB/findArmor_byidRequest", output = "http://EJB/ArmaturaEJB/findArmor_byidResponse")
    public Armatura findArmorByid(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

}
